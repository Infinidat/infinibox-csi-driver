# You can override the included template(s) by including variable overrides
# SAST customization:
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence


workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG


.go-cache:
    variables:
        GOPATH: $CI_PROJECT_DIR/.go
    cache:
      paths:
        - .go/pkg/mod/

variables:
  MAINTENANCE_MODE: 1
  DOCKER_BASE_IMAGE: redhat/ubi8:latest

stages:
- lint
- test
- build
- docker_build
- release

lint:
    image: golangci/golangci-lint:latest
    stage: lint
    tags:
      - go-test
    extends: .go-cache
    allow_failure: false
    except:
      - tags
    script:
      - golangci-lint -v --timeout=5m run

unit_test:
  image: quay.io/projectquay/golang:1.19
  stage: test
  except:
    - tags
  tags:
    - go-test
  script:
  - go test  -v ./...
  
sast:
  stage: test
  tags:
    - go-test
  variables: 
    SAST_EXCLUDED_PATHS: "**/*_test.go, test_helper/*.go"
    SCAN_KUBERNETES_MANIFESTS: "true"
    KUBESEC_HELM_CHARTS_PATH: deploy/helm/infinibox-csi-driver

go-build:
  stage: build
  tags:
    - go-build
  image: quay.io/projectquay/golang:1.19
  except:
    - tags
  script:
  - make build
  artifacts:
    paths:
      - infinibox-csi-driver
    expire_in: 1 day

build-branch-image:
  stage: docker_build
  tags:
    - docker-build
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_TAG
      when: never
  image: docker:20.10.16
  services:
    - name: docker:20.10.16-dind
      alias: dockerhost
  variables:
    DOCKER_HOST: tcp://dockerhost:2375/
    # Use the overlayfs driver for improved performance:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    FEATURE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  before_script:
   - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - > 
      docker build --pull 
      --build-arg VCS_REF=$CI_COMMIT_SHORT_SHA
      --build-arg BLAME_USER=$CI_REGISTRY_USER
      --build-arg DOCKER_IMAGE_TAG=$CI_COMMIT_REF_SLUG
      --build-arg BLAME_BUILD_TIME=$CI_JOB_STARTED_AT
      --build-arg BLAME_MACHINE=$CI_SERVER_HOST
      -t $FEATURE_IMAGE -f Dockerfile .
    - docker push $FEATURE_IMAGE

test-merge-image-build:
  stage: docker_build
  tags:
    - docker-build
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
      when: never
  image: docker:20.10.16
  services:
    - name: docker:20.10.16-dind
      alias: dockerhost
  variables:
    DOCKER_HOST: tcp://dockerhost:2375/
    # Use the overlayfs driver for improved performance:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DEV_IMAGE: $CI_REGISTRY_IMAGE:develop
  before_script:
   - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker pull $DEV_IMAGE || true
    - > 
      docker build --pull 
      --build-arg VCS_REF=$CI_COMMIT_SHORT_SHA
      --build-arg BLAME_USER=$CI_REGISTRY_USER
      --build-arg DOCKER_IMAGE_TAG=$CI_COMMIT_REF_SLUG
      --build-arg BLAME_BUILD_TIME=$CI_JOB_STARTED_AT
      --build-arg BLAME_MACHINE=$CI_SERVER_HOST
      -t $DEV_IMAGE -f Dockerfile .

# Re-tag latest when a tag is created. Will fail if :latest does not exist.
release-tag:
  variables:
    # We do not need the source code here. Just playing with Docker.
    GIT_STRATEGY: none
    DOCKER_HOST: tcp://dockerhost:2375/
    # Use the overlayfs driver for improved performance:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DEV_IMAGE: $CI_REGISTRY_IMAGE:develop
  stage: release
  only:
    # We want this job to be run on tags only
    - tags
  script:
    - docker pull $DEV_IMAGE
    - docker tag $DEV_IMAGE $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME


include:
- template: Security/SAST.gitlab-ci.yml
# container scanning disabled - further configuration required.
# - template: Security/Container-Scanning.gitlab-ci.yml
