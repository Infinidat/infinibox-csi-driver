apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: infinidat-csi-metrics
  name: infinidat-csi-metrics
  namespace: infinidat-csi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: infinidat-csi-metrics
  template:
    metadata:
      labels:
        app: infinidat-csi-metrics
    spec:
      serviceAccount: infinidat-csi-metrics
      imagePullSecrets:
      - name: private-docker-reg-secret
      containers:
      - image: infinidat/infinidat-csi-metrics:v2.13.2
        imagePullPolicy: Always
        name: metrics
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: APP_LOG_LEVEL
            value: trace
        volumeMounts:
          - name: config-volume
            readOnly: true
            mountPath: /tmp/infinidat-csi-metrics-config
      volumes:
        - name: config-volume
          configMap:
            name: infinidat-csi-metrics-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: infinidat-csi-metrics
  name: infinidat-csi-metrics
  namespace: infinidat-csi
spec:
  ports:
  - port: 11007
    protocol: TCP
    targetPort: 11007
    name: web
  selector:
    app: infinidat-csi-metrics
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: infinidat-csi-metrics
  namespace: infinidat-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: infinibox-csi-metrics
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  - secrets
  verbs:
  - get
  - list
- apiGroups:
  - "storage.k8s.io"
  resources:
  - storageclasses
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: infinibox-csi-metrics
  namespace: infinidat-csi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: infinibox-csi-metrics
subjects:
- kind: ServiceAccount
  name: infinidat-csi-metrics
  namespace: infinidat-csi
