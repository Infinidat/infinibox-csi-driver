apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ibox-nfs-storageclass-demo
provisioner: infinibox-csi-driver
reclaimPolicy: Delete
volumeBindingMode: Immediate
allowVolumeExpansion: true
mountOptions: # optional - defaults shown below, be sure to include vers=3 if you override
  - vers=3
  - tcp
  - rsize=262144
  - wsize=262144
parameters:
    csi.storage.k8s.io/controller-expand-secret-name: infinibox-creds
    csi.storage.k8s.io/controller-expand-secret-namespace: infi
    csi.storage.k8s.io/controller-publish-secret-name: infinibox-creds
    csi.storage.k8s.io/controller-publish-secret-namespace: infi
    csi.storage.k8s.io/node-publish-secret-name: infinibox-creds
    csi.storage.k8s.io/node-publish-secret-namespace: infi
    csi.storage.k8s.io/node-stage-secret-name: infinibox-creds
    csi.storage.k8s.io/node-stage-secret-namespace: infi
    csi.storage.k8s.io/provisioner-secret-name: infinibox-creds
    csi.storage.k8s.io/provisioner-secret-namespace: infi
    storage_protocol: nfs
    network_space: nsnas # specify InfiniBox namespace name
    nfs_export_permissions : "[{'access':'RW','client':'192.168.147.190-192.168.147.199','no_root_squash':false}]" # add node IPs here
    pool_name: N_pool_1 # specify InfiniBox pool name
    provision_type: THIN
    ssd_enabled: "true"
    # uid: 1000 # optional: override UID for filesystem mount 
    # gid: 1000 # optional: override GID for filesystem mount
    # unix_permissions: 777 # optional: chmod filesystem mount
    # privileged_ports_only: no # optional: use privileged ports or not
