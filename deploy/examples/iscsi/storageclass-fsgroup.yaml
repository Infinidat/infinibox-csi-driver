apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ibox-iscsi-fsg
provisioner: infinibox-csi-driver
reclaimPolicy: Delete
volumeBindingMode: Immediate
allowVolumeExpansion: true
parameters:
  csi.storage.k8s.io/controller-expand-secret-name: infinibox-creds
  csi.storage.k8s.io/controller-expand-secret-namespace: infinidat-csi
  csi.storage.k8s.io/controller-publish-secret-name: infinibox-creds
  csi.storage.k8s.io/controller-publish-secret-namespace: infinidat-csi
  csi.storage.k8s.io/node-publish-secret-name: infinibox-creds
  csi.storage.k8s.io/node-publish-secret-namespace: infinidat-csi
  csi.storage.k8s.io/node-stage-secret-name: infinibox-creds
  csi.storage.k8s.io/node-stage-secret-namespace: infinidat-csi
  csi.storage.k8s.io/provisioner-secret-name: infinibox-creds
  csi.storage.k8s.io/provisioner-secret-namespace: infinidat-csi
  csi.storage.k8s.io/fstype: ext4

  # Infinibox configuration
  network_space: $_E2E_NETWORK_SPACE
  pool_name: "csitesting"
  storage_protocol: "iscsi"

  # optional parameters
  #round_up_requested_size: "true"
  #provision_type: "THIN"
  #max_vols_per_host: "100"
  #ssd_enabled: "false"
  useCHAP: "none" # none / chap / mutual_chap
  #uid: "2000" # UID of volume, ignored if fsgroup specified in pod
  #gid: "2000" # GID of volume, ifnored if fsgroup specified in pod
  #unix_permissions: "777" # optional volume mount permissions, ignored for fsgroup
