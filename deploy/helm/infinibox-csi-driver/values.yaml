# vim: set filetype=yaml :
# Default values for infinibox-csi-driver.

replicaCount: 1

instanceCount: 1

# prefix for pv name
volumeNamePrefix: csi

# log level of driver
logLevel: "debug"

# name of the driver
# note same name will be used for provisioner name
csiDriverName: "infinibox-csi-driver"
csiDriverVersion: "v2.1.0-rc1"

# It is possible for two volumes, formatted XFS, to have identical XFS UUIDs.
# A common cause is to create a snapshot from a volume. Both will have
# the same UUIDs.
# If both are mounted on the same cluster node, the second mount will fail
# with a mount error: "wrong fs type, bad option, bad superblock".
# If allowXfsUuidRegeneration is enabled, and if the second volume/snapshot is
# writable, Infindat's CSI driver will generate a new XFS UUID and write it to
# the volume. This will allow the mount to succeed.
allowXfsUuidRegeneration: "yes"

# Image paths
images:
  imagePullSecret: private-docker-reg-secret

  # "images.attacher-sidercar" defines the container image used for the csi attacher sidecar
  attachersidecar: k8s.gcr.io/sig-storage/csi-attacher:v3.3.0
  attachersidecar_pull_policy: IfNotPresent

  # "images.provisioner-sidercar" defines the container image used for the csi provisioner sidecar
  provisionersidecar: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.2
  provisionersidecar_pull_policy: IfNotPresent

  # "images.snapshotter-sidercar" defines the container image used for the csi snapshotter sidercar
  snapshottersidecar: k8s.gcr.io/sig-storage/csi-snapshotter:v4.0.0
  snapshottersidecar_pull_policy: IfNotPresent

  # "images.registrar-sidercar" defines the container images used for the csi registrar sidercar
  registrarsidecar: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v1.3.0
  registrarsidecar_pull_policy: IfNotPresent

  # "images.resizer-sidercar" defines the container image used for the csi provisioner sidecar
  resizersidecar: k8s.gcr.io/sig-storage/csi-resizer:v1.3.0
  resizersidecar_pull_policy: IfNotPresent

  # "images.csidriver" defines csidriver image used for external provisioning
  csidriver: docker.io/infinidat/infinidat-csi-driver:v2.1.0-rc1
  csidriver_pull_policy: Always

Infinibox_Cred:
  SecretName: "infinibox-creds"
  username: "k8s-pool-admin"
  password: "000000"
  hostname: "ibox0000"
  inbound_user: "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout"
  inbound_secret: "0.0000000000000"
  outbound_user: "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin"
  outbound_secret: "0.0000000000000"
