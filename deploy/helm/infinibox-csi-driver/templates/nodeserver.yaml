---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-node
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-node
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-node
    spec:
      serviceAccount: {{ .Release.Name }}-node
      hostNetwork: true
      containers:  
        - name: liveness-probe
          image: {{ required "csi liveness sidercar image." .Values.images.livenesssidecar }}
          imagePullPolicy: {{ .Values.images.livenesssidecar_pull_policy | default "Always" | quote }}
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/run/csi/csi.sock
          volumeMounts:
            - name: driver-path
              mountPath: /var/run/csi
        - name: driver
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true              
          image: {{ required "Provide the Infinibox csi driver container image." .Values.images.csidriver }}
          imagePullPolicy: {{ .Values.images.csidriver_pull_policy | default "Always" | quote }}
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/kubelet/plugins/infinibox.infinidat.com/csi.sock
            - name: APP_LOG_LEVEL
              value: {{ .Values.logLevel }}
            - name: CSI_DRIVER_NAME
              value: {{ required "Provide CSI Driver Name"  .Values.csiDriverName }}
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          volumeMounts:
            - name: driver-path
              mountPath: /var/lib/kubelet/plugins/infinibox.infinidat.com
            - name: host-dir
              mountPath: /host
              mountPropagation: "Bidirectional"
        - name: registrar
          image: {{ required "Provide the csi node registrar sidecar container image." .Values.images.registrarsidecar }}
          imagePullPolicy: {{ .Values.images.registrarsidecar_pull_policy | default "Always" | quote }}
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=/var/lib/kubelet/plugins/infinibox.infinidat.com/csi.sock"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_IP_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP                  
          volumeMounts:
            - name: registration-dir
              mountPath: /registration
            - name: driver-path
              mountPath: /csi
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
        - name: driver-path
          hostPath:
            path: /var/lib/kubelet/plugins/infinibox.infinidat.com
            type: DirectoryOrCreate
        - name: host-dir
          hostPath:
            path: /
            type: Directory
      imagePullSecrets: []
