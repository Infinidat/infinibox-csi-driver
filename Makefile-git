# vim: set foldmethod=indent foldnestmax=1 foldcolumn=1:

##@ Developer Recipes
.PHONY: _test-git-porcelain-clean
_test-git-porcelain-clean:
	@# Test that source is committed to git. Sometimes it is convenient to disable this.
	@echo -e $(_begin)
	@# Enable test
	@test -z "$$(git status --porcelain)" || (echo -e "\nError: Git is not clean\n" && false)
	@# Disabled test
	@#test true
	@echo -e $(_finish)

.PHONY: _test-git-cherry
_test-git-cherry:
	@# Test that HEAD is pushed to upstream
	@echo -e $(_begin)
	@git symbolic-ref --short HEAD || (echo -e "\nError: Must be on a git branch, not headless\n" && false)
	@test -z "$$(git cherry)" || (echo -e "\nError: Git commit needs to be pushed to origin\n" && false)
	@echo -e $(_finish)

.PHONY: _test-git-tag-exists
_test-git-tag-exists:
	@# Test that there is a git commit matching _DOCKER_IMAGE_TAG.
	@echo -e $(_begin)
	@test -n "$$(git tag --list $(_DOCKER_IMAGE_TAG) | grep $(_DOCKER_IMAGE_TAG))" || (echo -e "\nError: Git commit is not tagged as $(_DOCKER_IMAGE_TAG)\n         " && false)
	@echo -e $(_finish)

.PHONY: _test-git-local-commit-tag-and-head-match
_test-git-local-commit-tag-and-head-match:
	@# Test that there is a local tag commit matching HEAD.
	@echo -e $(_begin)
	@local_tag_commit=$$(git rev-list -n 1 $(_DOCKER_IMAGE_TAG)) && \
	head_commit=$$(git rev-parse HEAD) && \
	if [[ "$$local_tag_commit" != "$$head_commit" ]]; then echo -e "\nError: For tag $(_DOCKER_IMAGE_TAG), HEAD commit $$head_commit does not match local tag commit $$local_tag_commit" && false; fi
	@echo -e $(_finish)

.PHONY: _test-git-tag-exists-remote
_test-git-tag-exists-remote:
	@# Test that the git tag has been pushed to remote.
	@echo -e $(_begin)
	@test -n "$$(git ls-remote --tags origin $(_DOCKER_IMAGE_TAG) | grep $(_DOCKER_IMAGE_TAG))" || (echo -e "\nError: Git commit is not tagged as $(_DOCKER_IMAGE_TAG) on origin\n" && false)
	@echo -e $(_finish)

.PHONY: _test-git-tag-remote-and-local-match
_test-git-tag-remote-and-local-match:
	@# Test that there is a remote tag commit matching the local tag commit.
	@echo -e $(_begin)
	@remote_tag_commit=$$(git ls-remote -t origin | grep $(_DOCKER_IMAGE_TAG) | awk '{ print $$1 }') && \
	local_tag_commit=$$(git rev-list -n 1 $(_DOCKER_IMAGE_TAG)) && \
	if [[ "$$local_tag_commit" != "$$remote_tag_commit" ]]; then echo -e "\nError: For tag $(_DOCKER_IMAGE_TAG), remote tag commit $$remote_tag_commit does not match local tag commit $$local_tag_commit" && false; fi
	@echo -e $(_finish)


.PHONY: releaseable  ## Test that this git clone is checked in and tagged and is ready for building a release.
releaseable:   ## Test that the project is git clean and therefore may be used for a release.
	@echo -e $(_begin)
	@$(_make) _test-git-porcelain-clean
	@$(_make) _test-git-cherry
	@$(_make) _test-git-tag-exists
	@$(_make) _test-git-local-commit-tag-and-head-match
	@$(_make) _test-git-tag-exists-remote
	@$(_make) _test-git-tag-remote-and-local-match
	@echo -e $(_finish)
